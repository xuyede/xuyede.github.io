{"version":3,"sources":["reducers/actionCreator.js","reducers/actionTypes.js","components/TodoListRedux.js","store/redux.js","store/Store.js","reducers/Redux.js","index.js"],"names":["actionCreator","todosAddItem","_ref","type","item","id","text","completed","todosToggleItem","_ref2","todosFilterItem","_ref3","visibilityFilter","todosClearCompleted","_ref4","isCompleted","TodoListRedux","inpVal","React","createRef","state","localStorage","getItem","addLocalStorage","data","todos","push","setItem","JSON","stringify","_this","parse","handleAddTodos","current","value","props","alert","handleToggleItem","handleShowAll","handleShowCompleted","handleShowActive","handleClearCompleted","_this2","this","_this$state","margin","marginRight","cursor","line","textDecoration","react_default","a","createElement","react","ref","onClick","map","key","style","className","includes","_this3","window","addEventListener","e","which","filter","Component","connect","Todos","actions","initType","store","_createStore","reducer","preloadedState","execute","Error","undefined","listeners","isDispatching","dispatch","action","Object","prototype","toString","call","forEach","l","getState","subscribe","listener","reducers","filterReducers","console","error","concat","arguments","length","newState","assign","_combineReducers","Counter","toConsumableArray","t","__REDUX_DEVTOOLS_EXTENSION__","render","es","components_TodoListRedux","document","getElementById"],"mappings":"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","file":"static/js/main.569829d0.chunk.js","sourcesContent":["import * as Types from '../reducers/actionTypes'\r\n\r\n/**\r\n *  todolistRedux.js\r\n */\r\n\r\nconst todosAddItem = ({ id, text, completed }) => {\r\n    return {\r\n        type : Types['ADD_TODOS_ITEM'],\r\n        item : {\r\n            id, text, completed\r\n        }\r\n    }\r\n}\r\n\r\nconst todosToggleItem = ({ id }) => {\r\n    return {\r\n        type : Types['TOGGLE_TODOS_ITEM'],\r\n        id\r\n    }\r\n}\r\n\r\nconst todosFilterItem = ({ visibilityFilter }) => {\r\n    return {\r\n        type : Types['FILTER_TODOS_ITEM'],\r\n        visibilityFilter\r\n    }\r\n}\r\n\r\nconst todosClearCompleted = ({ isCompleted }) => {\r\n    return {\r\n        type : Types['CLEAR_COMPLETED_ITEM'],\r\n        isCompleted\r\n    }\r\n}\r\n\r\nexport default {\r\n    todosAddItem,\r\n    todosToggleItem,\r\n    todosFilterItem,\r\n    todosClearCompleted\r\n}","// todolist\r\nexport const ADD_TODOS_ITEM = 'ADD_TODOS_ITEM'\r\nexport const TOGGLE_TODOS_ITEM = 'TOGGLE_TODOS_ITEM'\r\nexport const FILTER_TODOS_ITEM = 'FILTER_TODOS_ITEM'\r\nexport const CLEAR_COMPLETED_ITEM = 'CLEAR_COMPLETED_ITEM'","import React, { Component, Fragment } from 'react'\r\nimport '../styles/index.css'\r\nimport actions from '../reducers/actionCreator'\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass TodoListRedux extends Component {\r\n    inpVal = React.createRef()\r\n\r\n    state = {}\r\n\r\n    id = +localStorage.getItem('id') || 0\r\n\r\n    render() {\r\n        const { todos, visibilityFilter } = this.state\r\n        const margin = { marginRight : '10px' }\r\n        const cursor = { cursor: 'pointer' }\r\n        const line = { textDecoration: 'line-through' }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div>\r\n                    <input ref={ this.inpVal }/>\r\n                    <button onClick={ this.handleAddTodos }>Add</button>\r\n                </div>\r\n                <ul>\r\n                    {\r\n                        todos.map( item => (\r\n                            <li key={ item['id']+item['text'] } style={ item['completed'] ? line : cursor } onClick={ () => this.handleToggleItem(item['id']) }>\r\n                                { item['text'] }\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n                <span>Show: </span>\r\n                <span style={ margin } className={ visibilityFilter.includes('ALL') ? 'active' : ''} onClick={ this.handleShowAll }>All</span>\r\n                <span style={ margin } className={ visibilityFilter.includes('COMPLETED') ? 'active' : ''} onClick={ this.handleShowCompleted }>Completed</span>\r\n                <span style={ margin } className={ visibilityFilter.includes('ACTIVE') ? 'active' : ''} onClick={ this.handleShowActive }>Active</span>\r\n                <span style={ margin } onClick={ this.handleClearCompleted }>Clear Completed</span>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('keydown', (e) => {\r\n            if (e.which === 13) {\r\n                this.handleAddTodos()\r\n            }\r\n        }, null)\r\n    }\r\n\r\n    static getDerivedStateFromProps (props) {\r\n        const { visibilityFilter, todos } = props\r\n\r\n        if (visibilityFilter.includes('ALL')) {\r\n            return {\r\n                todos,\r\n                visibilityFilter\r\n            }\r\n        }\r\n        if (visibilityFilter.includes('COMPLETED')) {\r\n            const result = todos.filter(e => e['completed'] === true)\r\n            return {\r\n                todos : result,\r\n                visibilityFilter\r\n            }\r\n        }\r\n        if (visibilityFilter.includes('ACTIVE')) {\r\n            const result = todos.filter(e => e['completed'] !== true)\r\n            return {\r\n                todos : result,\r\n                visibilityFilter\r\n            }\r\n        }\r\n    }\r\n\r\n    addLocalStorage = (data) => {\r\n        \r\n        if (!localStorage.getItem('todos')) {\r\n            let todos = []\r\n            todos.push(data)\r\n            localStorage.setItem('todos', JSON.stringify(todos))\r\n            localStorage.setItem('id', this.id + '')\r\n            return \r\n        } \r\n\r\n        let todos = JSON.parse(localStorage.getItem('todos'))\r\n        todos.push(data)\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n        localStorage.setItem('id', this.id + '')\r\n    }\r\n\r\n    handleAddTodos = () => {\r\n        const id = this.id++\r\n        const text = this.inpVal.current.value\r\n        const completed = false\r\n\r\n        if (!text) {\r\n            alert('添加内容为空')\r\n            return\r\n        }\r\n\r\n        let data = {\r\n            id, text, completed \r\n        }\r\n\r\n        this.addLocalStorage(data)\r\n        this.props.todosAddItem({ id, text, completed })\r\n        this.inpVal.current.value = ''\r\n    }\r\n\r\n    handleToggleItem = id => {\r\n        this.props.todosToggleItem({ id })\r\n    }\r\n\r\n    handleShowAll = () => {\r\n        this.props.todosFilterItem({ visibilityFilter : 'SHOW_ALL' })\r\n    }\r\n\r\n    handleShowCompleted = () => {\r\n        this.props.todosFilterItem({ visibilityFilter : 'SHOW_COMPLETED' })\r\n    }\r\n\r\n    handleShowActive = () => {\r\n        this.props.todosFilterItem({ visibilityFilter : 'SHOW_ACTIVE' })\r\n    }\r\n\r\n    handleClearCompleted = () => {\r\n        this.props.todosClearCompleted({ isCompleted : true })\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos : state.Todos.todos,\r\n    visibilityFilter : state.Todos.visibilityFilter\r\n})\r\n\r\nexport default connect(mapStateToProps, actions)(TodoListRedux)","const initType = {\r\n    init : '@@redux/INIT'\r\n}\r\n\r\nconst _createStore = (reducer, preloadedState, execute) => {\r\n    if (typeof reducer !== 'function') {\r\n        throw new Error('reducer must be a function')\r\n    }\r\n\r\n    // 兼容第二第三参数\r\n    if (typeof preloadedState === 'function' && typeof execute === 'undefined') {\r\n        execute = preloadedState\r\n        preloadedState = undefined\r\n    }\r\n\r\n    if (typeof execute === 'function') {\r\n        return execute(_createStore)(reducer, preloadedState)\r\n    }\r\n\r\n    let state = preloadedState\r\n    let listeners = []\r\n    let isDispatching = false  // if dispatch is calling\r\n\r\n    const getState = () => state\r\n\r\n    const subscribe = listener => {\r\n        listeners.push(listener)\r\n        return () => {\r\n            listeners = listeners.filter(l => l !== listener)\r\n        }\r\n    }\r\n\r\n    const dispatch = action => {\r\n\r\n        if (Object.prototype.toString.call(action) !== '[object Object]') {\r\n            throw new Error('action must be a simple object')\r\n        }\r\n\r\n        if (typeof action.type === 'undefined') {\r\n            throw new Error('action type can not be a undefined')\r\n        }\r\n\r\n        if (isDispatching) {\r\n            throw new Error('reducer can not call dispatch')\r\n        }\r\n\r\n        try {\r\n            isDispatching = true\r\n            state = reducer(state, action)\r\n        } finally {\r\n            isDispatching = false            \r\n        }\r\n\r\n        listeners.forEach(l => l())\r\n    }\r\n    dispatch({ type : initType.init })\r\n\r\n    return {\r\n        getState, subscribe, dispatch\r\n    }\r\n}\r\n\r\nconst _combineReducers = reducers => {\r\n    let filterReducers = {}\r\n\r\n    // filter reducer that value is undefined\r\n    for (let key in reducers) {\r\n        const reducer = reducers[key]\r\n        if (reducer) {\r\n            filterReducers[key] = reducer\r\n        } else {\r\n            console.error(`the reducer of ${key} is undefined`)\r\n        }\r\n    }\r\n\r\n    // filter reducer that returned value is undefined\r\n    for (let key in filterReducers) {\r\n        const reducer = filterReducers[key]\r\n        const state = reducer(undefined, { type : initType.init })\r\n        if (typeof state === 'undefined') {\r\n            throw new Error(`reducer can not return undefined at ${key}`)\r\n        }\r\n    }\r\n\r\n    return (state = {}, action) => {\r\n        const newState = {}\r\n        for (let key in filterReducers) {\r\n            const reducer = filterReducers[key]\r\n            newState[key] = reducer(state[key], action)\r\n        }\r\n        return Object.assign({}, state, newState)\r\n    }\r\n}\r\n\r\nexport {\r\n    _createStore, _combineReducers\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport reducer from '../reducers/Redux'\r\nimport { _createStore, _combineReducers } from './redux'\r\n\r\n// _combineReducers(reducer)\r\n\r\nconst store = _createStore(\r\n    _combineReducers(reducer),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","import * as Types from './actionTypes'\r\n\r\nconst Todos = (state = {\r\n    todos : JSON.parse(localStorage.getItem('todos')) || [],\r\n    visibilityFilter : 'SHOW_ALL'\r\n}, action) => {\r\n    const type = action['type']\r\n\r\n    switch (type) {\r\n        case Types['ADD_TODOS_ITEM']:\r\n            var { item } = action\r\n            var todos = [item, ...state['todos']]\r\n            return Object.assign( {}, state, {\r\n                todos\r\n            })\r\n\r\n        case Types['TOGGLE_TODOS_ITEM']:\r\n            var { id } = action\r\n            var todos = [...state['todos']]\r\n            todos.forEach(e => e['id'] === id ? e['completed'] = !e['completed'] : '')\r\n            localStorage.setItem('todos', JSON.stringify(todos))\r\n            return Object.assign( {}, state, {\r\n                todos\r\n            })\r\n\r\n        case Types['FILTER_TODOS_ITEM']:\r\n            var { visibilityFilter } = action\r\n            return Object.assign({}, state, {\r\n                visibilityFilter\r\n            })\r\n\r\n        case Types['CLEAR_COMPLETED_ITEM']:\r\n            var { isCompleted } = action\r\n            var todos = state.todos.filter(t => t.completed !== isCompleted)\r\n            localStorage.setItem('todos', JSON.stringify(todos))\r\n            return Object.assign({}, state, {\r\n                todos\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst Counter = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'INCREMENT_COUNT':\r\n            return state + 1;\r\n        case 'DECREMENT_COUNT':\r\n            return state - 1\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default {\r\n    Counter, Todos\r\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport TodoListRedux from './components/TodoListRedux'\nimport { Provider } from 'react-redux'\nimport store from './store/Store'\n\nrender(\n    <Provider store={ store }>\n        <TodoListRedux/>\n    </Provider>\n    ,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}